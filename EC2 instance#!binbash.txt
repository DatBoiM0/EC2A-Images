#!/bin/bash

# Update and install Apache HTTP Server
yum update -y
yum install -y httpd

# Start and enable Apache HTTP Server
systemctl start httpd
systemctl enable httpd

# Fetch EC2 instance's Availability Zone
EC2AZ=$(TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" \
  -H "X-aws-ec2-metadata-token-ttl-seconds: 21600") && \
  curl -H "X-aws-ec2-metadata-token: $TOKEN" \
  http://169.254.169.254/latest/meta-data/placement/availability-zone)

# Create HTML with background, lasers, and custom asteroid image
cat <<EOF > /var/www/html/index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Laser Cat EC2</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      height: 100%;
    }
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: url('https://images.stockcake.com/public/1/1/0/110a1d52-518f-4796-ab01-e735b5d405f5_large/cat-in-top-hat-stockcake.jpg') no-repeat center center fixed;
      background-size: cover;
    }
    .content {
      position: absolute;
      top: 30px;
      width: 100%;
      z-index: 2;
      text-align: center;
      color: white;
      text-shadow: 2px 2px 8px #000;
    }
    .animated-welcome {
      font-size: 64px;
      font-weight: bold;
      animation: glow 3s infinite alternate;
    }
    .badge {
      margin-top: 20px;
      padding: 10px 20px;
      font-size: 22px;
      font-weight: bold;
      background: #ff9800;
      color: #000;
      border-radius: 10px;
      display: inline-block;
      box-shadow: 0 4px 10px rgba(0,0,0,0.5);
    }
    canvas {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;
    }
    @keyframes glow {
      0% { text-shadow: 2px 2px 8px red; }
      50% { text-shadow: 2px 2px 12px yellow; }
      100% { text-shadow: 2px 2px 8px red; }
    }
  </style>
</head>
<body>
  <div class="content">
    <div class="animated-welcome">Welcome</div>
    <p>This instance is currently running in:</p>
    <div class="badge">$EC2AZ</div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.2/p5.min.js"></script>
  <script>
    let asteroids = [];
    let lasers = [];
    let asteroidImg;
    let RICH = "https://raw.githubusercontent.com/DatBoiM0/EC2A-Images/refs/heads/main/Rich.jpg"
    //  Load the asteroid image once
    function preload() {
      asteroidImg = loadImage(RICH); // make sure file is in ./assets/
    }

    function setup() {
      createCanvas(window.innerWidth, window.innerHeight);
      for (let i = 0; i < 5; i++) asteroids.push(new Asteroid());
    }

    function draw() {
      clear();

      // draw & update all asteroids
      for (let a of asteroids) {
        a.update();
        a.render();
      }

      // draw & update lasers
      for (let i = lasers.length - 1; i >= 0; i--) {
        lasers[i].update();
        lasers[i].render();

        if (lasers[i].traveled > lasers[i].maxDistance) {
          lasers.splice(i, 1);
          continue;
        }

        for (let j = asteroids.length - 1; j >= 0; j--) {
          if (lasers[i] && lasers[i].hits(asteroids[j])) {
            if (asteroids[j].r > 20) {
              asteroids = asteroids.concat(asteroids[j].breakup());
            }
            asteroids.splice(j, 1);
            lasers.splice(i, 1);
            break;
          }
        }
      }

      // respawn if all destroyed
      if (asteroids.length === 0) {
        for (let i = 0; i < 5; i++) asteroids.push(new Asteroid());
      }
    }

    function mousePressed() {
      const leftEye = createVector(width * 0.42, height * 0.47);
      const rightEye = createVector(width * 0.68, height * 0.50);
      let target = createVector(mouseX, mouseY);

      lasers.push(new Laser(leftEye.copy(), p5.Vector.sub(target, leftEye).heading()));
      lasers.push(new Laser(rightEye.copy(), p5.Vector.sub(target, rightEye).heading()));
    }

    class Laser {
      constructor(pos, angle) {
        this.pos = pos.copy();
        this.start = pos.copy();
        this.vel = p5.Vector.fromAngle(angle).mult(20);
        this.traveled = 0;
        this.maxDistance = 600;
      }

      update() {
        this.pos.add(this.vel);
        this.traveled += this.vel.mag();
      }

      render() {
        stroke(255, 0, 0);
        strokeWeight(4);
        line(this.start.x, this.start.y, this.pos.x, this.pos.y);
      }

      hits(ast) {
        return p5.Vector.dist(this.pos, ast.pos) < ast.r;
      }
    }

    class Asteroid {
      constructor(pos, r) {
        this.pos = pos ? pos.copy() : createVector(random(width), random(height));
        this.r = r || random(30, 50);
        this.vel = p5.Vector.random2D().mult(1.5);
        this.rotation = random(TWO_PI);            // start angle
        this.rotationSpeed = random(-0.02, 0.02);  // spin speed
      }

      update() {
        this.pos.add(this.vel);
        this.edges();
        this.rotation += this.rotationSpeed; // spin!
      }

      render() {
        push();
        translate(this.pos.x, this.pos.y);
        rotate(this.rotation); // apply spin
        imageMode(CENTER);
        image(asteroidImg, 0, 0, this.r * 2, this.r * 2);
        pop();
      }

      breakup() {
        let pieces = [];
        for (let i = 0; i < 2; i++) {
          pieces.push(new Asteroid(this.pos, this.r / 2));
        }
        return pieces;
      }

      edges() {
        if (this.pos.x > width + this.r) this.pos.x = -this.r;
        if (this.pos.x < -this.r) this.pos.x = width + this.r;
        if (this.pos.y > height + this.r) this.pos.y = -this.r;
        if (this.pos.y < -this.r) this.pos.y = height + this.r;
      }
    }

    function windowResized() {
      resizeCanvas(window.innerWidth, window.innerHeight);
    }
  </script>
</body>
</html>
EOF
